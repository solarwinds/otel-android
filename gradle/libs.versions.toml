[versions]
agp = "8.7.3"
datastorePreferences = "1.1.3"
fragmentCompose = "1.8.6"
kotlin = "2.1.10"
coreKtx = "1.15.0"
junit5 = "5.11.4"
junit4 = "4.13.2"
android-junit-version = "1.2.1"
android-test = "1.6.1"
espresso-core = "3.6.1"
appcompat = "1.7.0"
material = "1.12.0"
constraintlayout = "2.2.1"
lifecycle-livedata-ktx = "2.8.7"
lifecycle-viewmodel-ktx = "2.8.7"
navigation-fragment-ktx = "2.8.8"
navigation-ui-ktx = "2.8.8"
spotless = "7.0.2"
activity-compose = "1.10.1"
compose-bom = "2025.02.00"
opentelemetry-sdk = "1.47.0"
opentelemetry-sdk-alpha = "1.47.0"
opentelemetry-inst = "2.13.1"
opentelemetry-android = "0.11.0-alpha"
opentelemetry-instrumentation-alpha = "2.13.1-alpha"
mockito = "5.15.2"
robocop = "4.14.1"
okhttp = "4.12.0"
byteBuddy = "1.17.1"
work_version = "2.10.0"
autoService = "1.1.1"
room_version = "2.6.1"
navigation-compose = "2.8.8"

[libraries]
androidx-annotation = "androidx.annotation:annotation:1.9.1"
androidx-datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastorePreferences" }
androidx-fragment-compose = { module = "androidx.fragment:fragment-compose", version.ref = "fragmentCompose" }
androidx-room = { module = "androidx.room:room-runtime", version.ref = "room_version" }
androidx-room-ktx = { module = "androidx.room:room-ktx", version.ref = "room_version" }
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "room_version" }
androidx-work-manager = { module = "androidx.work:work-runtime", version.ref = "work_version" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "android-junit-version" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espresso-core" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "constraintlayout" }
androidx-lifecycle-livedata-ktx = { group = "androidx.lifecycle", name = "lifecycle-livedata-ktx", version.ref = "lifecycle-livedata-ktx" }
androidx-lifecycle-viewmodel-ktx = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-ktx", version.ref = "lifecycle-viewmodel-ktx" }
androidx-navigation-fragment-ktx = { group = "androidx.navigation", name = "navigation-fragment-ktx", version.ref = "navigation-fragment-ktx" }
androidx-navigation-ui-ktx = { group = "androidx.navigation", name = "navigation-ui-ktx", version.ref = "navigation-ui-ktx" }
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activity-compose" }
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "compose-bom" }
androidx-material3 = { group = "androidx.compose.material3", name = "material3" }
androidx-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
androidx-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
androidx-navigation-compose = { group = "androidx.navigation", name = "navigation-compose", version.ref = "navigation-compose" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }
kotlin-serialization = "org.jetbrains.kotlinx:kotlinx-serialization-json:1.7.3"

opentelemetry-instrumentation-bom = { module = "io.opentelemetry.instrumentation:opentelemetry-instrumentation-bom", version.ref = "opentelemetry-inst" }
opentelemetry-bom = { module = "io.opentelemetry:opentelemetry-bom", version.ref = "opentelemetry-sdk" }
opentelemetry-api = { module = "io.opentelemetry:opentelemetry-api" }
opentelemetry-android = { module = "io.opentelemetry.android:android-agent", version.ref = "opentelemetry-android" }
opentelemetry-android-core = { module = "io.opentelemetry.android:core", version.ref = "opentelemetry-android" }
opentelemetry-android-session = { module = "io.opentelemetry.android:session", version.ref = "opentelemetry-android" }
opentelemetry-android-instrumentation = { module = "io.opentelemetry.android.instrumentation:android-instrumentation", version.ref = "opentelemetry-android" }
opentelemetry-api-incubator = { module = "io.opentelemetry:opentelemetry-api-incubator", version.ref = "opentelemetry-sdk-alpha" }
opentelemetry-exporter-otlp = { module = "io.opentelemetry:opentelemetry-exporter-otlp" }
opentelemetry-sdk-testing = { module = "io.opentelemetry:opentelemetry-sdk-testing" }
opentelemetry-sdk = { module = "io.opentelemetry:opentelemetry-sdk" }
opentelemetry-instrumentation-apiSemconv = { module = "io.opentelemetry.instrumentation:opentelemetry-instrumentation-api-incubator", version.ref = "opentelemetry-instrumentation-alpha" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
otel-android-okhttp-lib = { module = "io.opentelemetry.android.instrumentation:okhttp3-library", version.ref = "opentelemetry-android" }
otel-android-okhttp-agent = { module = "io.opentelemetry.android.instrumentation:okhttp3-agent", version.ref = "opentelemetry-android" }
otel-android-okhttp-websocket-agent = { module = "io.opentelemetry.android.instrumentation:okhttp3-websocket-agent", version.ref = "opentelemetry-android" }
otel-android-okhttp-websocket-lib = { module = "io.opentelemetry.android.instrumentation:okhttp3-websocket-library", version.ref = "opentelemetry-android" }
otel-android-log-lib = { module = "io.opentelemetry.android.instrumentation:android-log-library", version.ref = "opentelemetry-android" }
otel-android-log-agent = { module = "io.opentelemetry.android.instrumentation:android-log-agent", version.ref = "opentelemetry-android" }
byteBuddy = { module = "net.bytebuddy:byte-buddy", version.ref = "byteBuddy" }
byteBuddy-plugin = { module = "net.bytebuddy:byte-buddy-gradle-plugin", version.ref = "byteBuddy" }

auto-service-annotations = { module = "com.google.auto.service:auto-service-annotations", version.ref = "autoService" }
auto-service-processor = { module = "com.google.auto.service:auto-service", version.ref = "autoService" }
desugarJdkLibs = "com.android.tools:desugar_jdk_libs:2.1.5"
android-plugin = { module = "com.android.tools.build:gradle", version.ref = "agp" }
spotless-plugin = { module = "com.diffplug.spotless:spotless-plugin-gradle", version.ref = "spotless" }
kotlin-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }

junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit5" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit5" }
junit-vintage-engine = { module = "org.junit.vintage:junit-vintage-engine", version.ref = "junit5" }
junit-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit5" }
junit-junit4 = { module = "junit:junit", version.ref = "junit4" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robocop" }
assertj-core = "org.assertj:assertj-core:3.27.3"
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mockito-junit-jupiter = { module = "org.mockito:mockito-junit-jupiter", version.ref = "mockito" }
androidx-test-core = { module = "androidx.test:core", version.ref = "android-test" }
androidx-test-rules = { module = "androidx.test:rules", version.ref = "android-test" }
androidx-test-runner = { module = "androidx.test:runner", version.ref = "android-test" }
mockk = "io.mockk:mockk:1.14.0"

[bundles]
mocking = ["mockito-core", "mockito-junit-jupiter", "mockk"]
junit = ["junit-jupiter-api", "junit-jupiter-engine", "junit-jupiter-params", "junit-vintage-engine", "junit-junit4"]

[plugins]
spotless = { id = "com.diffplug.spotless", version.ref = "spotless" }
publishPlugin = { id = "io.github.gradle-nexus.publish-plugin", version = "2.0.0" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version = "2.1.10-1.0.29" }
